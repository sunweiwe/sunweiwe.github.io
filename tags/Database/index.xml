<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on sunweiwe/blog</title><link>https://sunweiwe.github.io/tags/Database/</link><description>Recent content in Database on sunweiwe/blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Nov 2023 07:44:47 +0000</lastBuildDate><atom:link href="https://sunweiwe.github.io/tags/Database/index.xml" rel="self" type="application/rss+xml"/><item><title>database syntax</title><link>https://sunweiwe.github.io/posts/database/database/syntax/</link><pubDate>Wed, 22 Nov 2023 07:44:47 +0000</pubDate><guid>https://sunweiwe.github.io/posts/database/database/syntax/</guid><description>数据库 # CRUD # Insert # INSERT INTO user VALUES (10,&amp;#39;root&amp;#39;,&amp;#39;root&amp;#39;,&amp;#34;name@163.com&amp;#34;),(11,&amp;#39;user&amp;#39;,&amp;#39;user&amp;#39;,&amp;#34;name@163.com&amp;#34;); INSERT INTO user(username, password, email) VALUES (&amp;#39;admin&amp;#39;, &amp;#39;admin&amp;#39;, &amp;#39;xxxx@163.com&amp;#39;); Update # UPDATE user SET username=&amp;#39;root&amp;#39;,password=&amp;#39;root&amp;#39; WHERE username = &amp;#39;root&amp;#39;; Delte # DELETE FROM user WHERE username = &amp;#39;root&amp;#39;; // 清空表数据 TRUNCATE TABLE user; Select # SELECT name FROM user; SELECT id,name FROM user; SELECT * FROM user; SELECT DISINCT id FROM user; SELECT * FROM user LIMIT 5; SELECT * FROM user LIMIT 0,5; SELECT * FROM user LIMIT 2,3; 排序 # // desc 降序 SELECT * FROM user ORDER BY create_time ASC, age DESC 分组 # SELECT name, COUNT(address) AS addr_count FROM user GROUP BY name; SELECT name, COUNT(address) AS addr_count FROM user GROUP BY name ORDER BY name DESC; having # 对汇总的 group by 结果进行过滤 一般和 group by 连用 SELECT name, COUNT(*) AS count FROM user WHERE email IS NOT NULL GROUP BY name HAVING COUNT(*) &amp;gt;= 1; 子查询 # where # select column_name [, column_name ] from table1 [, table2 ] where column_name operator (select column_name [, column_name ] from table1 [, table2 ] [where]) from # select column_name [, column_name ] from (select column_name [, column_name ] from table1 [, table2 ] [where]) as temp_table_name where condition IN,BETWEEN # SELECT * FROM user WHERE id IN (&amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;); SELECT * FROM user WHERE age BETWEEN 3 AND 5; AND,OR,NOT # SELECT id, name, address FROM user WHERE name = &amp;#39;name&amp;#39; AND age &amp;gt;= 18; SELECT id, name, address FROM user WHERE name = &amp;#39;name&amp;#39; OR age &amp;gt;= 18; SELECT * FROM user WHERE age NOT BETWEEN 8 AND 18; 连接 # 连接表的本质就是将不同表的记录合并起来，形成一张新表。当然，这张新表只是临时的，它仅存在于本次查询期间。</description></item></channel></rss>